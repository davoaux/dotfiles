#!/usr/bin/env bash


backup() {
  bdir=../imgrename-backup-$(date +%d%m%y)
  [ -d $bdir ] && rm -rf "$bdir/*" || mkdir "$bdir"
  cp -r * "$bdir"
}

rename() {
  tdir=../dir-temp
  tdir_noimg=../dir-temp-noimg
  mkdir "$tdir" "$tdir_noimg"
  num=1
  for file in *; do
    # Get file extension
    ext=$(file -b "$file")
    ext=$(echo ${ext%% *} | tr '[:upper:]' '[:lower:]')

    case $ext in
      png|jpg|jpeg) # If file extension is png, jpg or jpeg, rename file
        mv -- "$file" "$tdir/image$num.$ext";
        ((num++));;
      *) # If not, move the file to a temp dir (move it back later)
        mv -- "$file" "$tdir_noimg";;
    esac
  done

  # Replace the old images and clean up the temp directories
  rm -rf *
  mv $tdir/* .
  mv $tdir_noimg/* .
  rm -rf "$tdir" "$tdir_noimg"
}

confirm() {
  read -p 'Do you want to rename all images? (y/n) ' answer
  case $answer in
    y|Y) return 0;;
    n|N) exit 0;;
    *) echo 'invalid option'; confirm;;
  esac
}

help() {
  echo -e 'Usage: $0 [OPTION]...\nOptions: -b/--backup\tBackup the images in a temporary directory'
}

confirm
if [ -z "$1" ]; then
  echo 'renaming images...'
  rename
else
  case $1 in
    -h|--help)
      help;;
    -b|--backup)
      echo 'backing up images...';
      backup;
      echo 'renaming images...';
      rename;;
    *)
      help;;
  esac
fi

